<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.wwjswly</groupId>
        <artifactId>learn</artifactId>
        <version>0.0.1</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <groupId>com.wwjswly</groupId>
    <artifactId>leran-amq-send</artifactId>
    <version>0.0.1</version>
    <name>leran-amq-send</name>
    <description>Demo project for Spring Boot</description>

    <properties>
        <java.version>1.8</java.version>
        <docker.image.prefix>springboot</docker.image.prefix>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-amqp</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-mongodb</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>

        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.46</version>
        </dependency>
        <dependency>
            <groupId>org.apache.velocity</groupId>
            <artifactId>velocity-engine-core</artifactId>
            <version>2.0</version>
        </dependency>
        <!-- sfl4j -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid</artifactId>
            <version>1.1.10</version>
        </dependency>
        <dependency>
            <groupId>org.freemarker</groupId>
            <artifactId>freemarker</artifactId>
            <version>2.3.28</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus-boot-starter</artifactId>
            <version>3.0.1</version>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.47</version>
        </dependency>
        <dependency>
            <groupId>com.wwjswly</groupId>
            <artifactId>learn-core-api</artifactId>
            <version>0.0.1</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
        </dependency>
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-all</artifactId>
            <version>4.1.19</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-consul-discovery</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-openfeign</artifactId>
        </dependency>
        <dependency>
            <groupId>com.wwjswly.learn.service</groupId>
            <artifactId>learn-service</artifactId>
            <version>0.0.1-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
    </dependencies>
    <!--<build>-->
    <!--<plugins>-->
    <!--&lt;!&ndash; 添加spring的插件， 就可以直接通过 mvn spring-boot:run 运行了 &ndash;&gt;-->
    <!--<plugin>-->
    <!--<groupId>org.springframework.boot</groupId>-->
    <!--<artifactId>spring-boot-maven-plugin</artifactId>-->
    <!--<dependencies>-->
    <!--<dependency>-->
    <!--<groupId>org.springframework</groupId>-->
    <!--<artifactId>springloaded</artifactId>-->
    <!--<version>1.2.4.RELEASE</version>-->
    <!--</dependency>-->
    <!--</dependencies>-->
    <!--</plugin>-->

    <!--<plugin>-->
    <!--<groupId>com.spotify</groupId>-->
    <!--<artifactId>docker-maven-plugin</artifactId>-->
    <!--<version>0.4.13</version>-->
    <!--<configuration>-->
    <!--&lt;!&ndash; 镜像地址 &ndash;&gt;-->
    <!--<imageName>${docker.image.prefix}/${project.artifactId}</imageName>-->
    <!--&lt;!&ndash; docker的DockerFile配置文件路径 &ndash;&gt;-->
    <!--<dockerDirectory>src/main/docker</dockerDirectory>-->
    <!--&lt;!&ndash; 远程docker容器的地址 &ndash;&gt;-->
    <!--<dockerHost>http://127.0.0.1:2375</dockerHost>-->
    <!--<resources>-->
    <!--<resource>-->
    <!--<targetPath>/</targetPath>-->
    <!--<directory>${project.build.directory}</directory>-->
    <!--<include>${project.build.finalName}.jar</include>-->
    <!--</resource>-->
    <!--</resources>-->
    <!--</configuration>-->
    <!--</plugin>-->

    <!--</plugins>-->
    <!--</build>-->
</project>
